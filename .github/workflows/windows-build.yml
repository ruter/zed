name: Build Zed Windows

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # UTC 每天 00:00 定期触发构建

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      # 避免 RUSTFLAGS 干扰，也可在 Cargo config 中处理
      RUSTFLAGS: ""

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Set up Rust targets
        run: rustup target add x86_64-pc-windows-msvc

      - name: Install Visual C++ Redistributable (optional)
        run: choco install vcredist2022 -y

      - name: Ensure long path support (optional)
        run: |
          git config --system core.longpaths true
          reg add "HKLM\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f

      - name: Set ZED_RC_TOOLKIT_PATH (if needed)
        run: |
          echo "ZED_RC_TOOLKIT_PATH=C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.22449.0\\x64" >> $GITHUB_ENV

      - name: Build (Release)
        run: cargo run --release

      - name: Run tests
        run: cargo test --workspace

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zed-windows-release
          path: target\release\*

      - name: Create GitHub Release (on schedule or push)
        if: github.event_name == 'push' || github.event_name == 'schedule'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.sha }}
          name: "Zed Windows Build ${{ github.run_number }}"
          files: target\release\*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
